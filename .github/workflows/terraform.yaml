name: Terraform
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
env:
  TF_VAR_cloudflare_api_token: ${{ secrets.TF_VAR_CLOUDFLARE_API_TOKEN }}
  TF_VAR_cloudflare_email: ${{ secrets.TF_VAR_CLOUDFLARE_EMAIL }}
  # Path from tfcmt working-directory
  TFCMT_CONFIG: ../.github/tfcmt-config.yaml
permissions:
  pull-requests: write
jobs:
  tf_plan:
    name: Plan Terraform
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TERRAFORM_CLOUD_API_TOKEN }}
      - uses: shmokmt/actions-setup-tfcmt@v2
      - name: Terraform fmt
        run: terraform fmt -check
        working-directory: "./terraform"
      - run: terraform init
        working-directory: "./terraform"
      - name: Validate .tf files
        run: terraform validate -no-color
        working-directory: "./terraform"
      - name: Plan Terraform infrastructure changes
        working-directory: "./terraform"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: tfcmt plan -patch -- terraform plan -input=false -no-color -lock-timeout=10m
  tf_apply:
    name: Apply Terraform
    runs-on: ubuntu-24.04
    concurrency: tf_apply_on_main
    needs:
      - tf_plan
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TERRAFORM_CLOUD_API_TOKEN }}
      - uses: shmokmt/actions-setup-tfcmt@v2
      - run: terraform init
        working-directory: "./terraform"
      - name: Apply Terraform infrastructure changes
        working-directory: "./terraform"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: tfcmt apply -- terraform apply -input=false -no-color -auto-approve -lock-timeout=10m
