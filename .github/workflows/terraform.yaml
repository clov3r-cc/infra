name: Terraform
on:
  push:
  workflow_dispatch:
env:
  TF_VAR_cloudflare_api_token: ${{ secrets.TF_VAR_CLOUDFLARE_API_TOKEN }}
  TF_VAR_cloudflare_email: ${{ secrets.TF_VAR_CLOUDFLARE_EMAIL }}
jobs:
  tf_plan:
    name: Plan Terraform
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TERRAFORM_CLOUD_API_TOKEN }}
      - name: Terraform fmt
        run: terraform fmt -check
        working-directory: "./terraform"
      - run: terraform init
        working-directory: "./terraform"
      - name: Validate .tf files
        run: terraform validate -no-color
        working-directory: "./terraform"
      - name: Plan Terraform infrastructure changes
        run: terraform plan -input=false -no-color -lock-timeout=10m
        id: tfplan
        working-directory: "./terraform"
      - name: Comment result to Pull Request
        uses: robburger/terraform-pr-commenter@v1
        if: github.event_name == 'pull_request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          commenter_type: plan
          # Terraform rarely writes to stdout and stderr in the same action, so we concatenate
          commenter_input: ${{ format('{0}{1}', steps.tfplan.outputs.stdout, steps.tfplan.outputs.stderr) }}
          commenter_exitcode: ${{ steps.tfplan.outputs.exitcode }}
  tf_apply:
    name: Apply Terraform
    runs-on: ubuntu-24.04
    concurrency: tf_apply_on_main
    needs:
      - tf_plan
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TERRAFORM_CLOUD_API_TOKEN }}
      - run: terraform init
        working-directory: "./terraform"
      - name: Terraform apply
        run: terraform apply -input=false -no-color -auto-approve -lock-timeout=10m
        working-directory: "./terraform"
